<?xml version="1.0"?>
<!-- Kinematic model, simplified visual, no collisions -->
<robot name="bebop" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:property name="PI" value="3.1415926535897931" />
 <!-- <xacro:property name="camera_offset_len" value="0.1" />
  <xacro:property name="camera_offset_ver" value="0.0" />-->
  <!-- +- 35 degrees -->
  <xacro:property name="pan_range" value="0.610865" />
  <xacro:property name="pan_vel" value="2.0" />
  <!-- +- 35 degrees -->
  <xacro:property name="tilt_range" value="0.610865" />
  <xacro:property name="tilt_vel" value="2.0" />
  <xacro:property name="joint_effort" value="50" />

  <link name="base_link">
   <visual>
<origin rpy="0 0 1.57075" xyz="0 0 0"/>
      <geometry>
        <mesh scale=".001 .001 .001" filename="package://bebop_description/meshes/bebop_model.stl"/>
      </geometry>
   </visual>
<collision>
      <origin rpy="0 0 1.57075" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hector_quadrotor_urdf/meshes/quadrotor/quadrotor_base.stl"/>
<!--        <mesh filename="package://bebop_description/meshes/bebop_model.stl"/>-->
      </geometry>
    </collision>
  </link>
<link name="innertia_link">
    <inertial>
      <mass value="1.477"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.01152" ixy="0.0" ixz="0.0" iyy="0.01152" iyz="0.0" izz="0.0218"/>
    </inertial>
  </link>
  <link name="camera_base_link"></link>
  <link name="camera_pan_link"></link>
  <link name="camera_tilt_link"></link>
  <link name="camera_optical"></link>
  <link name="camera_kinect_link">
    <inertial_sphere diameter="0.07" mass="0.01"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hector_sensors_description/meshes/kinect_camera/kinect_camera_simple.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hector_sensors_description/meshes/kinect_camera/kinect_camera_simple.stl"/>
      </geometry>
    </collision>
  </link>

  <joint name="base_link_joint" type="fixed">
    <origin xyz="0.1 0.0 0.0" rpy="0 0 0" />
    <parent link="base_link"/>
    <child link="camera_base_link" />
  </joint>

  <joint name="camera_kinect_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.05 0.0 -0.06"/>
    <parent link="camera_base_link"/>
    <child link="camera_kinect_link"/>
  </joint>

  <joint name="camera_pan_joint" type="revolute">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="camera_base_link" />
    <child link="camera_pan_link" />
    <axis xyz="0 0 1" />
    <limit lower="-0.610865" upper="0.610865"
      effort="50" velocity="2" />
  </joint>

  <joint name="camera_tilt_joint" type="revolute">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="camera_pan_link" />
    <child link="camera_tilt_link" />
    <axis xyz="0 1 0" />
    <limit lower="-0.610865" upper="0.610865"
      effort="50" velocity="2" />
  </joint>

  <joint name="camera_optical_joint" type="fixed">
    <origin xyz="0 0 0" rpy="-1.57079632679 0 -1.57079632679" />
    <parent link="camera_tilt_link" />
    <child link="camera_optical" />
  </joint>

  <joint name="innertia_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="innertia_link"/>
  </joint>
<joint name="camera_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 -0.02 0.0"/>
    <parent link="camera_kinect_link"/>
    <child link="camera_depth_frame"/>
  </joint>
  <link name="camera_depth_frame"/>
  <joint name="camera_depth_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0"/>
    <parent link="camera_depth_frame"/>
    <child link="camera_depth_optical_frame"/>
  </joint>
  <link name="camera_depth_optical_frame"/>
  <joint name="camera_rgb_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 -0.0125 0.0"/>
    <parent link="camera_kinect_link"/>
    <child link="camera_rgb_frame"/>
  </joint>
  <link name="camera_rgb_frame"/>
  <joint name="camera_rgb_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0"/>
    <parent link="camera_rgb_frame"/>
    <child link="camera_rgb_optical_frame"/>
  </joint>
  <link name="camera_rgb_optical_frame"/>

  <!-- [nice to have] 
  <xacro:include filename="bebop.gazebo" />-->
<gazebo reference="base_link">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <canonicalBody>base_link</canonicalBody>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_imu.so" name="quadrotor_imu_sim">
      <updateRate>100.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>raw_imu</topicName>
      <rpyOffsets>0 0 0</rpyOffsets>
      <!-- deprecated -->
      <gaussianNoise>0</gaussianNoise>
      <!-- deprecated -->
      <accelDrift>0 0 0</accelDrift>
      <accelGaussianNoise>0.35 0.35 0.3</accelGaussianNoise>
      <rateDrift>0 0 0</rateDrift>
      <rateGaussianNoise>0.05 0.05 0.015</rateGaussianNoise>
      <headingDrift>0.1</headingDrift>
      <headingGaussianNoise>0.05</headingGaussianNoise>
    </plugin>
    <plugin filename="libhector_gazebo_ros_baro.so" name="quadrotor_baro_sim">
      <updateRate>10.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>pressure_height</topicName>
      <altimeterTopicName>altimeter</altimeterTopicName>
      <offset>0</offset>
      <drift>0.1</drift>
      <gaussianNoise>0.1</gaussianNoise>
    </plugin>
    <plugin filename="libhector_gazebo_ros_magnetic.so" name="quadrotor_magnetic_sim">
      <updateRate>10.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>magnetic</topicName>
      <offset>0 0 0</offset>
      <drift>0.0 0.0 0.0</drift>
      <gaussianNoise>1.3e-2 1.3e-2 1.3e-2</gaussianNoise>
    </plugin>
    <plugin filename="libhector_gazebo_ros_gps.so" name="quadrotor_gps_sim">
      <updateRate>4.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>fix</topicName>
      <velocityTopicName>fix_velocity</velocityTopicName>
      <drift>5.0 5.0 5.0</drift>
      <gaussianNoise>0.01 0.01 0.01</gaussianNoise>
      <velocityDrift>0 0 0</velocityDrift>
      <velocityGaussianNoise>0.05 0.05 0.05</velocityGaussianNoise>
    </plugin>
    <plugin filename="libgazebo_ros_p3d.so" name="quadrotor_groundtruth_sim">
      <updateRate>100.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>ground_truth/state</topicName>
      <gaussianNoise>0.0</gaussianNoise>
      <frameName>map</frameName>
    </plugin>
    <plugin filename="libgazebo_ros_controller_manager.so" name="gazebo_ros_controller_manager">
      <alwaysOn>true</alwaysOn>
      <updateRate>1000.0</updateRate>
    </plugin>
<plugin filename="libhector_gazebo_quadrotor_simple_controller.so" name="quadrotor_simple_controller">
    <!--<plugin filename="libhector_quadrotor_twist_controller.so" name="quadrotor_simple_controller">-->
      <alwaysOn>true</alwaysOn>
      <updateRate>0.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>cmd_vel</topicName>
      <stateTopic>ground_truth/state</stateTopic>
      <imuTopic>raw_imu</imuTopic>
      <rollpitchProportionalGain>10.0</rollpitchProportionalGain>
      <rollpitchDifferentialGain>5.0</rollpitchDifferentialGain>
      <rollpitchLimit>0.5</rollpitchLimit>
      <yawProportionalGain>2.0</yawProportionalGain>
      <yawDifferentialGain>1.0</yawDifferentialGain>
      <yawLimit>1.5</yawLimit>
      <velocityXYProportionalGain>5.0</velocityXYProportionalGain>
      <velocityXYDifferentialGain>1.0</velocityXYDifferentialGain>
      <velocityXYLimit>5</velocityXYLimit>
      <velocityZProportionalGain>5.0</velocityZProportionalGain>
      <velocityZDifferentialGain>1.0</velocityZDifferentialGain>
      <velocityZLimit>2</velocityZLimit>
      <maxForce>30</maxForce>
    </plugin>
  </gazebo>
<gazebo reference="camera_depth_frame">
    <sensor name="camera" type="depth">
      <update_rate>20</update_rate>
      <camera>
        <horizontal_fov>1.0471975512</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>320</width>
          <height>240</height>
        </image>
        <clip>
          <near>0.2</near>
          <far>20</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="camera_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>20</updateRate>
        <imageTopicName>camera/rgb/image_raw</imageTopicName>
        <cameraInfoTopicName>camera/rgb/camera_info</cameraInfoTopicName>
        <depthImageTopicName>camera/depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>camera/depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>camera/depth/points</pointCloudTopicName>
        <frameName>camera_depth_optical_frame</frameName>
        <distortion_k1>0.0</distortion_k1>
        <distortion_k2>0.0</distortion_k2>
        <distortion_k3>0.0</distortion_k3>
        <distortion_t1>0.0</distortion_t1>
        <distortion_t2>0.0</distortion_t2>
				<pointCloudCutoff>0.2</pointCloudCutoff>
				<pointCloudCutoffMax>20</pointCloudCutoffMax>
      </plugin>
    </sensor>
  </gazebo>
</robot>
